# --- Directive Definitions ---
directive @table(key: String!) on OBJECT
directive @relation(on: String!, through: String) on FIELD_DEFINITION

# --- Enums ---
# Enums provide better type safety and clarity for fields with fixed values.
enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum MessageSender {
  USER
  PROVIDER
}

# --- Root Types ---
type Query {
  _version: String
}

type Mutation {
  _version: String
}

# --- Object Types ---
"""
Represents a user in the system.
"""
type User @table(key: "id") {
  id: ID! # Changed to ID type
  name: String!
  email: String!
  role: String!
  provider: [ServiceProvider] @relation(on: "userId")
}

"""
Represents a service provider in the system.
"""
type ServiceProvider @table(key: "id") {
  id: ID! # Changed to ID type
  userId: ID! # Changed to ID type
  # ... (other fields)
  user: User! @relation(on: "userId")
  services: [Service] @relation(through: "ServiceProviderService")
  reviews: [Review] @relation(on: "providerId")
}

# ... (other types with ID fields updated) ...

"""
Represents an appointment made by a client with a provider.
"""
type Booking @table(key: "id") {
  id: ID! # Changed to ID type
  providerId: ID! # Changed to ID type
  clientId: ID! # Changed to ID type
  serviceIds: [ID!]! # Changed to ID type
  date: Timestamp!
  status: BookingStatus! # Changed to Enum
  isPaid: Boolean!
  reviewId: ID # Changed to ID type
  provider: ServiceProvider! @relation(on: "providerId")
  client: User! @relation(on: "clientId")
  review: Review @relation(on: "reviewId")
}

"""
Represents a single message within a Conversation.
"""
type Message @table(key: "id") {
  id: Int!
  conversationId: Int!
  sender: MessageSender! # Changed to Enum
  text: String!
  isAi: Boolean
  bookingId: ID # Changed to ID type
  conversation: Conversation! @relation(on: "conversationId")
}