
type User {
  id: ID!
  name: String
  email: String
  role: String
}

type ServiceProvider {
  id: ID!
  userId: ID!
  name: String
  specialty: String
  avatarUrl: String
  dataAiHint: String
  rating: Float
  reviewCount: Int
  isFeatured: Boolean
  isFavourite: Boolean
  bio: String
  location: String
  playlist: String
}

type Service {
  id: ID!
  categoryId: String
  name: String
  description: String
  price: Float
  duration: Int
}

type Booking {
  id: ID!
  providerId: String
  providerName: String
  serviceIds: [String]!
  date: Timestamp
  status: String
  clientName: String
  isPaid: Boolean
  reviewId: String
}

type Review {
  id: ID!
  bookingId: ID!
  author: String
  avatarUrl: String
  dataAiHint: String
  rating: Int
  comment: String
  title: String
}

type ServiceCategory {
    id: ID!
    name: String!
}

type Query {

}

type Mutation {

}
