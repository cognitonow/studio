type User {
  id: String! @unique
  name: String
  email: String! @unique
  role: String
  provider: ServiceProvider @relation(name:"UserProvider")
}

type ServiceProvider {
  id: String! @unique
  userId: String!
  name: String
  specialty: String
  avatarUrl: String
  dataAiHint: String
  rating: Float
  reviewCount: Int
  isFeatured: Boolean
  isFavourite: Boolean
  bio: String
  location: String
  playlist: String
  user: User! @relation(name:"UserProvider")
  services: [Service] @relation(name:"ProviderServices")
  reviews: [Review] @relation(name:"ProviderReviews")
}

type Service {
  id: String! @unique
  categoryId: String!
  name: String
  description: String
  price: Int
  duration: Int
  provider: ServiceProvider @relation(name:"ProviderServices")
}

type Booking {
  id: String! @unique
  providerId: String!
  providerName: String
  serviceIds: [String]
  date: Timestamp
  status: String
  clientName: String
  isPaid: Boolean
  reviewId: String
}

type Review {
  id: String! @unique
  bookingId: String!
  author: String
  avatarUrl: String
  dataAiHint: String
  rating: Int
  comment: String
  title: String
  provider: ServiceProvider! @relation(name:"ProviderReviews")
}
